#:kivy 2.0.0

# для вызова модальных окон
#:import Factory kivy.factory.Factory

# decimal - работа с десятичными числами
# from decimal import Decimal as dec
#:import dec decimal.Decimal

# Settings - настройки программы через json
#:import settings Settings.Settings

# Translate - автоматическая локализация программы на родной язык
#:import translate bind.Translate.Translate

# Работа с директориями и файлами ОС
# from merlib.fs.File import File
#:import file merlib.fs.File.File

# Дизайн калькулятора
<Calc>:
    # vars
    label_display_comment: label_display_comment
    label_display: label_display
    label_display_memory: label_display_memory
    orientation: 'vertical'
    # padding: 2
    BoxLayout:
        orientation: 'vertical'
        padding: 1
        size_hint: 1, 0.35
        Display:
            BoxLayout:
                orientation: 'vertical'
                size_hint: 1, 0.30
                padding: [5,0,0,0]
                spacing: 0
                DisplayComment:
                    id: label_display_comment
                    text: ''
            BoxLayout:
                orientation: 'vertical'
                # padding: [0,0,0,0]
                DisplayScroll:
                    DisplayLabel:
                        id: label_display
                        text: ''
            BoxLayout:
                orientation: 'vertical'
                size_hint: 1, 0.40
                padding: [5,0,0,0]
                spacing: 0
                DisplayMemory:
                    id: label_display_memory
                    text: ''
    BoxLayout:
        orientation: 'horizontal'
        size_hint: 1, 0.1
        ButtonSupport:
            # text: "SETTINGS"
            text: translate().get_translate(file().file_get_local_language(), 'settings')
            on_press: Factory.WindowSettings().open()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonSupport:
            # text: "HISTORY"
            text: translate().get_translate(file().file_get_local_language(), 'history')
            on_press: Factory.WindowHistory().open()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonSupport:
            # text: "INFO"
            text: translate().get_translate(file().file_get_local_language(), 'info')
            on_press: Factory.WindowInfo().open()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
    GridLayout:
        cols: 4
        # padding: [0,2,0,0]
        ButtonBase:
            text: '1'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '2'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '3'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '+'
            on_press: root.add()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '4'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '5'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '6'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '-'
            # on_press: root.subtract()
            # on_press: root.subtract() if (len(label_display.text)) else root.write_digit(self)
            on_press: root.subtract() if (len(label_display_comment.text)) else root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '7'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '8'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '9'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '*'
            on_press: root.multiply()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            # text: '.'
            text: chr(183)
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '0'
            on_press: root.write_digit(self)
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '%'
            on_press: root.percent()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            # text: '/'
            text: chr(247)
            on_press: root.division()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: 'C'
            on_press: root.clear()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '<'
            on_press: root.back()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: 'M'
            on_press: root.memory()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))
        ButtonBase:
            text: '='
            on_press: root.equal()
            on_press: app.vibrator_android(dec(settings().load_settings()['vibro']))